package com.globallogic.creditcardpayment.servicesImpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.globallogic.creditcardpayment.entity.Account;
import com.globallogic.creditcardpayment.entity.CreditCard;
import com.globallogic.creditcardpayment.entity.Customer;
import com.globallogic.creditcardpayment.exceptionHandling.GlobalException;
import com.globallogic.creditcardpayment.entity.Account;
import com.globallogic.creditcardpayment.repositories.AccountRepo;
import com.globallogic.creditcardpayment.repositories.CustomerRepo;
import com.globallogic.creditcardpayment.services.AccountService;

@Service
public class AccountServiceImpl implements AccountService {

	@Autowired
	AccountRepo accountRepo;

	@Autowired
	CustomerRepo customerRepo;

	@Override
	public List<Account> showAccount() {
		return accountRepo.findAll();
	}

	@Override
	public Account showAccountById(long id) {
		return accountRepo.findById(id).get();
	}

	@Override
	public String addAccount(Account account) {
		if (account.getAccountName().isEmpty() || account.getAccountType().isEmpty() || account.getBalance() == 0) {
			throw new GlobalException();
		}
		accountRepo.save(account);
		return "ACCOUNT DETAILS ADDED SUCCESSFULLY";
	}

	@Override
	public String updateAccount(Account account) {
		if (accountRepo.findById(account.getAccountid()).get() != null) {
			if (account.getAccountid() == 0 || account.getAccountName().isEmpty() || account.getAccountType().isEmpty()
					|| account.getBalance() == 0) {
				throw new GlobalException();
			}
		} else {
			throw new GlobalException();
		}
		accountRepo.save(account);
		return "ACCOUNT DETAILS UPDATED SUCCESSFULLY";
	}

	@Override
	public String deleteAccount(long id) {
		if (accountRepo.findById(id).get() == null) {
			throw new GlobalException();
		} else {
			Account account = accountRepo.findById(id).get();
			Customer customer = customerRepo.findByCreditCardId(account.getAccountid());
			if (customer != null) {
				return "ACCOUNT DETAILS CANNOT BE DELETED AS MAPPING DONE WITH CUSTOMER";
			}
			accountRepo.deleteById(id);
			return "ACCOUNT DETAILS DELETED SUCCESSFULLY";
		}
	}
}
